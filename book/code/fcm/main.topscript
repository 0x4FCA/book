#use "topfind";;
[%%expect ocaml {|- : unit = ()|};
{|
Findlib has been successfully loaded. Additional directives:
  #require "package";;      to load a package
  #list;;                   to list the available packages
  #camlp4o;;                to load camlp4 (standard syntax)
  #camlp4r;;                to load camlp4 (revised syntax)
  #predicates "p,q,...";;   to set these predicates
  Topfind.reset();;         to force that packages will be reloaded
  #thread;;                 to enable threads

|};
ocaml {|- : unit = ()|}];;
#thread;;
[%%expect{|
/Users/yminsky/.opam/4.04.1/lib/ocaml/threads: added to search path
/Users/yminsky/.opam/4.04.1/lib/ocaml/threads/threads.cma: loaded
|}];;
#camlp4o;;
[%%expect{|
/Users/yminsky/.opam/4.04.1/lib/ocaml/dynlink.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ocaml/camlp4: added to search path
/Users/yminsky/.opam/4.04.1/lib/ocaml/camlp4/camlp4o.cma: loaded
|}];;
#require "core";;
[%%expect{|
/Users/yminsky/.opam/4.04.1/lib/base/caml: added to search path
/Users/yminsky/.opam/4.04.1/lib/base/caml/caml.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/base/shadow_stdlib: added to search path
/Users/yminsky/.opam/4.04.1/lib/base/shadow_stdlib/shadow_stdlib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/sexplib/0: added to search path
/Users/yminsky/.opam/4.04.1/lib/base: added to search path
/Users/yminsky/.opam/4.04.1/lib/base/base.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/fieldslib: added to search path
/Users/yminsky/.opam/4.04.1/lib/fieldslib/fieldslib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_compare/runtime-lib: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_compare/runtime-lib/ppx_compare_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/sexplib: added to search path
/Users/yminsky/.opam/4.04.1/lib/variantslib: added to search path
/Users/yminsky/.opam/4.04.1/lib/variantslib/variantslib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/bin_prot/shape: added to search path
/Users/yminsky/.opam/4.04.1/lib/bin_prot/shape/bin_shape_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/bin_prot: added to search path
/Users/yminsky/.opam/4.04.1/lib/bin_prot/bin_prot.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_hash/runtime-lib: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_hash/runtime-lib/ppx_hash_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_inline_test/config: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_inline_test/config/inline_test_config.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_inline_test/runtime-lib: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_inline_test/runtime-lib/ppx_inline_test_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/core_kernel/base_for_tests: added to search path
/Users/yminsky/.opam/4.04.1/lib/core_kernel/base_for_tests/base_for_tests.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/jane-street-headers: added to search path
/Users/yminsky/.opam/4.04.1/lib/jane-street-headers/jane_street_headers.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ocaml/nums.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/num-top: added to search path
/Users/yminsky/.opam/4.04.1/lib/num-top/num_top.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/num: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_assert/runtime-lib: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_assert/runtime-lib/ppx_assert_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_bench/runtime-lib: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_bench/runtime-lib/ppx_bench_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/common: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/common/expect_test_common.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/config: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/config/expect_test_config.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/collector: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/collector/expect_test_collector.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/stdio: added to search path
/Users/yminsky/.opam/4.04.1/lib/stdio/stdio.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/typerep: added to search path
/Users/yminsky/.opam/4.04.1/lib/typerep/typerep_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/core_kernel: added to search path
/Users/yminsky/.opam/4.04.1/lib/core_kernel/core_kernel.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/sexplib/unix: added to search path
/Users/yminsky/.opam/4.04.1/lib/sexplib/unix/sexplib_unix.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/spawn: added to search path
/Users/yminsky/.opam/4.04.1/lib/spawn/spawn.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/core: added to search path
/Users/yminsky/.opam/4.04.1/lib/core/core.cma: loaded
|}];;
#require "ppx_jane";;
[%%expect{|
/Users/yminsky/.opam/4.04.1/lib/ppx_jane: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_jane/./ppx.exe --as-ppx: activated
|}];;
[@@@part "0.5"];;
open Core_kernel;;
module type X_int = sig val x : int end;;
[%%expect ocaml {|module type X_int = sig val x : int end|}];;
[@@@part "1"];;
module Three : X_int = struct let x = 3 end;;
[%%expect ocaml {|module Three : X_int|}];;
Three.x;;
[%%expect ocaml {|- : int = 3|}];;
[@@@part "2"];;
let three = (module Three : X_int);;
[%%expect ocaml {|val three : (module X_int) = <module>|}];;
[@@@part "3"];;
module Four = struct let x = 4 end;;
[%%expect ocaml {|module Four : sig val x : int end|}];;
let numbers = [ three; (module Four) ];;
[%%expect ocaml {|val numbers : (module X_int) list = [<module>; <module>]|}];;
[@@@part "4"];;
let numbers = [three; (module struct let x = 4 end)];;
[%%expect ocaml {|val numbers : (module X_int) list = [<module>; <module>]|}];;
[@@@part "5"];;
module New_three = (val three : X_int) ;;
[%%expect ocaml {|module New_three : X_int|}];;
New_three.x;;
[%%expect ocaml {|- : int = 3|}];;
[@@@part "6"];;
module type Y_int = X_int;;
[%%expect ocaml {|module type Y_int = X_int|}];;
let five = (module struct let x = 5 end : Y_int);;
[%%expect ocaml {|val five : (module Y_int) = <module>|}];;
[three; five];;
[%%expect ocaml {|- : (module X_int) list = [<module>; <module>]|}];;
[@@@part "7"];;
[three; (module (val five))];;
[%%expect ocaml {|- : (module X_int) list = [<module>; <module>]|}];;
[@@@part "8"];;
let to_int m =
  let module M = (val m : X_int) in
  M.x
;;
[%%expect ocaml {|val to_int : (module X_int) -> int = <fun>|}];;
let plus m1 m2 =
  (module struct
    let x = to_int m1 + to_int m2
  end : X_int)
;;
[%%expect ocaml {|val plus : (module X_int) -> (module X_int) -> (module X_int) = <fun>|}];;
[@@@part "9"];;
let six = plus three three;;
[%%expect ocaml {|val six : (module X_int) = <module>|}];;
to_int (List.fold ~init:six ~f:plus [three;three]);;
[%%expect ocaml {|- : int = 12|}];;
[@@@part "10"];;
let to_int (module M : X_int) = M.x ;;
[%%expect ocaml {|val to_int : (module X_int) -> int = <fun>|}];;
[@@@part "11"];;
module type Bumpable = sig
  type t
  val bump : t -> t
end;;
[%%expect ocaml {|module type Bumpable = sig type t val bump : t -> t end|}];;
[@@@part "12"];;
module Int_bumper = struct
  type t = int
  let bump n = n + 1
end;;
[%%expect ocaml {|module Int_bumper : sig type t = int val bump : t -> t end|}];;
module Float_bumper = struct
  type t = float
  let bump n = n +. 1.
end;;
[%%expect ocaml {|module Float_bumper : sig type t = float val bump : t -> t end|}];;
[@@@part "13"];;
let int_bumper = (module Int_bumper : Bumpable);;
[%%expect ocaml {|val int_bumper : (module Bumpable) = <module>|}];;
[@@@part "14"];;
let (module Bumpable) = int_bumper in Bumpable.bump 3;;
[%%expect{|
Characters 52-53:
Error: This expression has type int but an expression was expected of type
         Bumpable.t
|}];;
[@@@part "15"];;
let int_bumper = (module Int_bumper : Bumpable with type t = int);;
[%%expect ocaml {|val int_bumper : (module Bumpable with type t = int) = <module>|}];;
let float_bumper = (module Float_bumper : Bumpable with type t = float);;
[%%expect ocaml {|val float_bumper : (module Bumpable with type t = float) = <module>|}];;
[@@@part "16"];;
let (module Bumpable) = int_bumper in Bumpable.bump 3;;
[%%expect ocaml {|- : int = 4|}];;
let (module Bumpable) = float_bumper in Bumpable.bump 3.5;;
[%%expect ocaml {|- : float = 4.5|}];;
[@@@part "17"];;
let bump_list
      (type a)
      (module B : Bumpable with type t = a)
      (l: a list)
  =
  List.map ~f:B.bump l
;;
[%%expect ocaml {|
val bump_list : (module Bumpable with type t = 'a) -> 'a list -> 'a list =
  <fun>
|}];;
[@@@part "18"];;
bump_list int_bumper [1;2;3];;
[%%expect ocaml {|- : int list = [2; 3; 4]|}];;
bump_list float_bumper [1.5;2.5;3.5];;
[%%expect ocaml {|- : float list = [2.5; 3.5; 4.5]|}];;
[@@@part "19"];;
let wrap_in_list (type a) (x:a) = [x];;
[%%expect ocaml {|val wrap_in_list : 'a -> 'a list = <fun>|}];;
[@@@part "20"];;
let double_int (type a) (x:a) = x + x;;
[%%expect{|
Characters 32-33:
Error: This expression has type a but an expression was expected of type int
|}];;
[@@@part "21"];;
module type Comparable = sig
  type t
  val compare : t -> t -> int
end ;;
[%%expect ocaml {|module type Comparable = sig type t val compare : t -> t -> int end|}];;
let create_comparable (type a) compare =
  (module struct
    type t = a
    let compare = compare
  end : Comparable with type t = a)
;;
[%%expect ocaml {|
val create_comparable :
  ('a -> 'a -> int) -> (module Comparable with type t = 'a) = <fun>
|}];;
create_comparable Int.compare;;
[%%expect ocaml {|- : (module Comparable with type t = int) = <module>|}];;
create_comparable Float.compare;;
[%%expect ocaml {|- : (module Comparable with type t = float) = <module>|}];;
