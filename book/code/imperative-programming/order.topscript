#use "topfind";;
[%%expect{|
- : unit = ()
- : unit = ()
|}];;
#thread;;
#camlp4o;;
#require "core";;
#require "core.syntax";;
open Core_kernel;;
[@@@part "1"];;
let x = sin 120. in
let y = sin 75.  in
let z = sin 128. in
List.exists ~f:(fun x -> x < 0.) [x;y;z]
;;
[%%expect{|
Characters 8-11:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
Characters 28-31:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
Characters 48-51:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
- : bool = true
|}];;
[@@@part "2"];;
let x = lazy (sin 120.) in
let y = lazy (sin 75.)  in
let z = lazy (sin 128.) in
List.exists ~f:(fun x -> Lazy.force x < 0.) [x;y;z]
;;
[%%expect{|
Characters 14-17:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
Characters 41-44:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
Characters 68-71:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
- : bool = true
|}];;
[@@@part "3"];;
let x = lazy (printf "1\n"; sin 120.) in
let y = lazy (printf "2\n"; sin 75.)  in
let z = lazy (printf "3\n"; sin 128.) in
List.exists ~f:(fun x -> Lazy.force x < 0.) [x;y;z]
;;
[%%expect{|
Characters 28-31:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
Characters 69-72:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
Characters 110-113:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
- : bool = true
1
2
|}];;
[@@@part "4"];;
List.exists ~f:(fun x -> x < 0.)
  [ (printf "1\n"; sin 120.);
    (printf "2\n"; sin 75.);
    (printf "3\n"; sin 128.); ]
;;
[%%expect{|
Characters 52-55:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
Characters 82-85:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
Characters 111-114:
Warning 3: deprecated: Core_kernel.sin
[since 2016-07] Use [Float.sin]
- : bool = true
3
2
1
|}];;
