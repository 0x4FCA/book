#use "topfind";;
#thread;;
#camlp4o;;
#require "core";;
#require "core.syntax";;
open Core_kernel.Std;;

[%%expect{|
- : unit = ()
Findlib has been successfully loaded. Additional directives:
  #require "package";;      to load a package
  #list;;                   to list the available packages
  #camlp4o;;                to load camlp4 (standard syntax)
  #camlp4r;;                to load camlp4 (revised syntax)
  #predicates "p,q,...";;   to set these predicates
  Topfind.reset();;         to force that packages will be reloaded
  #thread;;                 to enable threads

- : unit = ()
|}]
[@@@part "1"];;
for i = 0 to 3 do printf "i = %d\n" i done;;






[%%expect{|
i = 0
i = 1
i = 2
i = 3
|}]
[@@@part "2"];;
for i = 3 downto 0 do printf "i = %d\n" i done;;






[%%expect{|
i = 3
i = 2
i = 1
i = 0
|}]
[@@@part "3"];;
let rev_inplace ar =
  let i = ref 0 in
  let j = ref (Array.length ar - 1) in
  (* terminate when the upper and lower indices meet *)
  while !i < !j do
    (* swap the two elements *)
    let tmp = ar.(!i) in
    ar.(!i) <- ar.(!j);
    ar.(!j) <- tmp;
    (* bump the indices *)
    incr i;
    decr j
  done
;;

let nums = [|1;2;3;4;5|];;

rev_inplace nums;;

nums;;

