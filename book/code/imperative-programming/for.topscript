#use "topfind";;
[%%expect{|
- : unit = ()
- : unit = ()
|}];;
#thread;;
#camlp4o;;
#require "core";;
#require "core.syntax";;
open Core_kernel.Std;;
[@@@part "1"];;
for i = 0 to 3 do printf "i = %d\n" i done;;
[%%expect{|
- : unit = ()
i = 0
i = 1
i = 2
i = 3
|}];;
[@@@part "2"];;
for i = 3 downto 0 do printf "i = %d\n" i done;;
[%%expect{|
- : unit = ()
i = 3
i = 2
i = 1
i = 0
|}];;
[@@@part "3"];;
let rev_inplace ar =
  let i = ref 0 in
  let j = ref (Array.length ar - 1) in
  (* terminate when the upper and lower indices meet *)
  while !i < !j do
    (* swap the two elements *)
    let tmp = ar.(!i) in
    ar.(!i) <- ar.(!j);
    ar.(!j) <- tmp;
    (* bump the indices *)
    incr i;
    decr j
  done
;;
[%%expect{|
val rev_inplace : 'a array -> unit = <fun>
|}];;
let nums = [|1;2;3;4;5|];;
[%%expect{|
val nums : int array = [|1; 2; 3; 4; 5|]
|}];;
rev_inplace nums;;
[%%expect{|
- : unit = ()
|}];;
nums;;
[%%expect{|
- : int array = [|5; 4; 3; 2; 1|]
|}];;
