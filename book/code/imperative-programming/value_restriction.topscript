#use "topfind";;
[%%expect ocaml {|- : unit = ()|};
{|
Findlib has been successfully loaded. Additional directives:
  #require "package";;      to load a package
  #list;;                   to list the available packages
  #camlp4o;;                to load camlp4 (standard syntax)
  #camlp4r;;                to load camlp4 (revised syntax)
  #predicates "p,q,...";;   to set these predicates
  Topfind.reset();;         to force that packages will be reloaded
  #thread;;                 to enable threads

|};
ocaml {|- : unit = ()|}];;
#thread;;
[%%expect{|
/Users/yminsky/.opam/4.04.1/lib/ocaml/threads: added to search path
/Users/yminsky/.opam/4.04.1/lib/ocaml/threads/threads.cma: loaded
|}];;
#camlp4o;;
[%%expect{|
/Users/yminsky/.opam/4.04.1/lib/ocaml/dynlink.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ocaml/camlp4: added to search path
/Users/yminsky/.opam/4.04.1/lib/ocaml/camlp4/camlp4o.cma: loaded
|}];;
#require "core";;
[%%expect{|
/Users/yminsky/.opam/4.04.1/lib/base/caml: added to search path
/Users/yminsky/.opam/4.04.1/lib/base/caml/caml.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/base/shadow_stdlib: added to search path
/Users/yminsky/.opam/4.04.1/lib/base/shadow_stdlib/shadow_stdlib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/sexplib/0: added to search path
/Users/yminsky/.opam/4.04.1/lib/base: added to search path
/Users/yminsky/.opam/4.04.1/lib/base/base.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/fieldslib: added to search path
/Users/yminsky/.opam/4.04.1/lib/fieldslib/fieldslib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_compare/runtime-lib: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_compare/runtime-lib/ppx_compare_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/sexplib: added to search path
/Users/yminsky/.opam/4.04.1/lib/variantslib: added to search path
/Users/yminsky/.opam/4.04.1/lib/variantslib/variantslib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/bin_prot/shape: added to search path
/Users/yminsky/.opam/4.04.1/lib/bin_prot/shape/bin_shape_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/bin_prot: added to search path
/Users/yminsky/.opam/4.04.1/lib/bin_prot/bin_prot.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_hash/runtime-lib: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_hash/runtime-lib/ppx_hash_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_inline_test/config: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_inline_test/config/inline_test_config.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_inline_test/runtime-lib: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_inline_test/runtime-lib/ppx_inline_test_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/core_kernel/base_for_tests: added to search path
/Users/yminsky/.opam/4.04.1/lib/core_kernel/base_for_tests/base_for_tests.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/jane-street-headers: added to search path
/Users/yminsky/.opam/4.04.1/lib/jane-street-headers/jane_street_headers.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ocaml/nums.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/num-top: added to search path
/Users/yminsky/.opam/4.04.1/lib/num-top/num_top.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/num: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_assert/runtime-lib: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_assert/runtime-lib/ppx_assert_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_bench/runtime-lib: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_bench/runtime-lib/ppx_bench_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/common: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/common/expect_test_common.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/config: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/config/expect_test_config.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/collector: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_expect/collector/expect_test_collector.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/stdio: added to search path
/Users/yminsky/.opam/4.04.1/lib/stdio/stdio.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/typerep: added to search path
/Users/yminsky/.opam/4.04.1/lib/typerep/typerep_lib.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/core_kernel: added to search path
/Users/yminsky/.opam/4.04.1/lib/core_kernel/core_kernel.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/sexplib/unix: added to search path
/Users/yminsky/.opam/4.04.1/lib/sexplib/unix/sexplib_unix.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/spawn: added to search path
/Users/yminsky/.opam/4.04.1/lib/spawn/spawn.cma: loaded
/Users/yminsky/.opam/4.04.1/lib/core: added to search path
/Users/yminsky/.opam/4.04.1/lib/core/core.cma: loaded
|}];;
#require "ppx_jane";;
[%%expect{|
/Users/yminsky/.opam/4.04.1/lib/ppx_jane: added to search path
/Users/yminsky/.opam/4.04.1/lib/ppx_jane/./ppx.exe --as-ppx: activated
|}];;
open Core_kernel;;
#require "mtime.os.top";;
[%%expect{|No such package: mtime.os.top|}];;
let time f =
  let counter = Mtime.counter () in
  let x = f () in
  let elapsed = Mtime.count counter in
  printf "Time: %F ms\n" (Mtime.to_ms elapsed);
  x 
;;
[%%expect{|
Characters 29-42:
Error: Unbound module Mtime
Hint: Did you mean Time?
|}];;
let memoize f =
  let memo_table = Hashtbl.Poly.create () in
  (fun x ->
     Hashtbl.find_or_add memo_table x ~default:(fun () -> f x))
;;
[%%expect ocaml {|val memoize : ('a -> 'b) -> 'a -> 'b = <fun>|}];;
let identity x = x;;
[%%expect ocaml {|val identity : 'a -> 'a = <fun>|}];;
[@@@part "1"];;
(fun x -> [x;x]);;
[%%expect ocaml {|- : 'a -> 'a list = <fun>|}];;
[@@@part "2"];;
memoize (fun x -> [x;x]);;
[%%expect ocaml {|- : '_a -> '_a list = <fun>|}];;
[@@@part "3"];;
identity (fun x -> [x;x]);;
[%%expect ocaml {|- : '_a -> '_a list = <fun>|}];;
[@@@part "4"];;
let f () = ref None;;
[%%expect ocaml {|val f : unit -> 'a option ref = <fun>|}];;
[@@@part "5"];;
List.init;;
[%%expect ocaml {|- : int -> f:(int -> 'a) -> 'a list = <fun>|}];;
List.init 10 ~f:Int.to_string;;
[%%expect ocaml {|- : string list = ["0"; "1"; "2"; "3"; "4"; "5"; "6"; "7"; "8"; "9"]|}];;
[@@@part "6"];;
let list_init_10 = List.init 10;;
[%%expect ocaml {|val list_init_10 : f:(int -> '_a) -> '_a list = <fun>|}];;
[@@@part "7"];;
let list_init_10 ~f = List.init 10 ~f;;
[%%expect ocaml {|val list_init_10 : f:(int -> 'a) -> 'a list = <fun>|}];;
[@@@part "8"];;
identity (fun x -> [x;x]);;
[%%expect ocaml {|- : '_a -> '_a list = <fun>|}];;
[@@@part "9"];;
identity [];;
[%%expect ocaml {|- : 'a list = []|}];;
[@@@part "10"];;
[||];;
[%%expect ocaml {|- : 'a array = [||]|}];;
identity [||];;
[%%expect ocaml {|- : '_a array = [||]|}];;
[@@@part "11"];;
module Concat_list : sig
  type 'a t
  val empty : 'a t
  val singleton : 'a -> 'a t
  val concat  : 'a t -> 'a t -> 'a t  (* constant time *)
  val to_list : 'a t -> 'a list       (* linear time   *)
end = struct

  type 'a t = Empty | Singleton of 'a | Concat of 'a t * 'a t

  let empty = Empty
  let singleton x = Singleton x
  let concat x y = Concat (x,y)

  let rec to_list_with_tail t tail =
    match t with
    | Empty -> tail
    | Singleton x -> x :: tail
    | Concat (x,y) -> to_list_with_tail x (to_list_with_tail y tail)

  let to_list t =
    to_list_with_tail t []

end;;
[%%expect ocaml {|
module Concat_list :
  sig
    type 'a t
    val empty : 'a t
    val singleton : 'a -> 'a t
    val concat : 'a t -> 'a t -> 'a t
    val to_list : 'a t -> 'a list
  end
|}];;
[@@@part "12"];;
Concat_list.empty;;
[%%expect ocaml {|- : 'a Concat_list.t = <abstr>|}];;
identity Concat_list.empty;;
[%%expect ocaml {|- : '_a Concat_list.t = <abstr>|}];;
[@@@part "13"];;
module Concat_list : sig
  type +'a t
  val empty : 'a t
  val singleton : 'a -> 'a t
  val concat  : 'a t -> 'a t -> 'a t  (* constant time *)
  val to_list : 'a t -> 'a list       (* linear time   *)
end = struct

  type 'a t = Empty | Singleton of 'a | Concat of 'a t * 'a t

  let empty = Empty
  let singleton x = Singleton x
  let concat x y = Concat (x,y)

  let rec to_list_with_tail t tail =
    match t with
    | Empty -> tail
    | Singleton x -> x :: tail
    | Concat (x,y) -> to_list_with_tail x (to_list_with_tail y tail)

  let to_list t =
    to_list_with_tail t []

end;;
[%%expect ocaml {|
module Concat_list :
  sig
    type +'a t
    val empty : 'a t
    val singleton : 'a -> 'a t
    val concat : 'a t -> 'a t -> 'a t
    val to_list : 'a t -> 'a list
  end
|}];;
[@@@part "14"];;
identity Concat_list.empty;;
[%%expect ocaml {|- : 'a Concat_list.t = <abstr>|}];;
