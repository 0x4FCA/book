#use "topfind";;
#thread;;
#camlp4o;;
#require "core";;
#require "core.syntax";;

[%%expect{|
- : unit = ()
Findlib has been successfully loaded. Additional directives:
  #require "package";;      to load a package
  #list;;                   to list the available packages
  #camlp4o;;                to load camlp4 (standard syntax)
  #camlp4r;;                to load camlp4 (revised syntax)
  #predicates "p,q,...";;   to set these predicates
  Topfind.reset();;         to force that packages will be reloaded
  #thread;;                 to enable threads

- : unit = ()
|}];;
[@@@part "1"];;
open Core_kernel.Std;;
class istack = object
  val mutable v = [0; 2]

  method pop =
    match v with
    | hd :: tl ->
      v <- tl;
      Some hd
    | [] -> None

  method push hd =
    v <- hd :: v
end ;;







[%%expect{|
|}];;
[@@@part "2"];;
let s = new istack ;;

s#pop ;;

s#push 5 ;;

s#pop ;;


[%%expect];;
[@@@part "3"];;
type istack = < pop: int option; push: int -> unit > ;;

