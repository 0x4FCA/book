#use "topfind";;
#thread;;
#camlp4o;;
#require "core";;
#require "core.syntax";;

[%%expect{|
- : unit = ()
Findlib has been successfully loaded. Additional directives:
  #require "package";;      to load a package
  #list;;                   to list the available packages
  #camlp4o;;                to load camlp4 (standard syntax)
  #camlp4r;;                to load camlp4 (revised syntax)
  #predicates "p,q,...";;   to set these predicates
  Topfind.reset();;         to force that packages will be reloaded
  #thread;;                 to enable threads

- : unit = ()
|}];;
[@@@part "1"];;
let imm_stack init = object
  val v = init

  method pop =
    match v with
    | hd :: tl -> Some (hd, {< v = tl >})
    | [] -> None 

  method push hd = 
    {< v = hd :: v >}
end ;;



[%%expect];;
[@@@part "2"];;
let s = imm_stack [3; 2; 1] ;;

let t = s#push 4 ;;

s#pop ;;


t#pop ;;


