#use "topfind";;
[%%expect{|
- : unit = ()
- : unit = ()
|}];;
#thread;;
#camlp4o;;
#require "core";;
#require "ppx_jane";;
open Core_kernel;;
[@@@part "0.5"];;
type t = { foo: int; bar: float } [@@deriving sexp] ;;
[%%expect{|
type t = { foo : int; bar : float; }
val t_of_sexp : Sexplib.Type.t -> t = <fun>
val sexp_of_t : t -> Sexplib.Type.t = <fun>
|}];;
t_of_sexp (Sexp.of_string "((bar 35) (foo 3))") ;;
[%%expect{|- : t = {foo = 3; bar = 35.}|}];;
[@@@part "1"];;
exception Bad_message of string list ;;
[%%expect{|exception Bad_message of string list|}];;
Exn.to_string (Bad_message ["1";"2";"3"]) ;;
[%%expect{|- : string = "(\"Bad_message(_)\")"|}];;
exception Good_message of string list [@@deriving sexp];;
[%%expect{|exception Good_message of string list|}];;
Exn.to_string (Good_message ["1";"2";"3"]) ;;
[%%expect{|- : string = "(//toplevel//.Good_message (1 2 3))"|}];;
