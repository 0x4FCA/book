#use "topfind";;
[%%expect{|
- : unit = ()
- : unit = ()
|}];;
#thread;;
#camlp4o;;
#require "core";;
#require "core.syntax";;
open Core_kernel.Std;;
[@@@part "0.5"];;
Int.sexp_of_t 3;;
[%%expect{|
- : Sexplib.Sexp.t = Sexplib.Sexp.Atom "3"
|}];;
String.sexp_of_t "hello";;
[%%expect{|
- : Sexplib.Sexp.t = Sexplib.Sexp.Atom "hello"
|}];;
Exn.sexp_of_t (Invalid_argument "foo");;
[%%expect{|
- : Base__.Sexplib.Sexp.t =
Base__.Sexplib.Sexp.List
 [Base__.Sexplib.Sexp.Atom "Invalid_argument";
  Base__.Sexplib.Sexp.Atom "foo"]
|}];;
[@@@part "1"];;
List.sexp_of_t;;
[%%expect{|
- : ('a -> Base__.Sexplib.Sexp.t) ->
    'a Core_kernel.Std.List.t -> Base__.Sexplib.Sexp.t
= <fun>
|}];;
List.sexp_of_t Int.sexp_of_t [1; 2; 3];;
[%%expect{|
- : Base__.Sexplib.Sexp.t =
Base__.Sexplib.Sexp.List
 [Base__.Sexplib.Sexp.Atom "1"; Base__.Sexplib.Sexp.Atom "2";
  Base__.Sexplib.Sexp.Atom "3"]
|}];;
[@@@part "2"];;
List.t_of_sexp;;
[%%expect{|
- : (Base__.Sexplib.Sexp.t -> 'a) ->
    Base__.Sexplib.Sexp.t -> 'a Core_kernel.Std.List.t
= <fun>
|}];;
List.t_of_sexp Int.t_of_sexp (Sexp.of_string "(1 2 3)");;
[%%expect{|
- : Core_kernel.Std.Int.t Core_kernel.Std.List.t = [1; 2; 3]
|}];;
List.t_of_sexp Int.t_of_sexp (Sexp.of_string "(1 2 three)");;
[%%expect{|
Exception:
Base__Sexp.Of_sexp_error (Failure "int_of_sexp: (Failure int_of_string)",
 Base__Sexp.Atom "three").
|}];;
