* Things we need to cover
** polymorphic compare and hash
** Playing nicely with the type system
 - dealing with type errors
 - Using type annotations to narrow down problems
** private types
** Helpful hints on debugging
 Should just be sprinkled throughout the text in examples
*** Using (type a) to nail down the polymorphic type of something.
*** Generally using type annotations
*** Debugger?
* Other Chapters?
** Maps and Hashtbl's
** Clever type tricks
 - private types and private type abbreviations
 - GADTs
** Threads
 - We should do some coverage of pre-emptive threads and how they
   work in OCaml, no?  Maybe as part of the Async chapter?
