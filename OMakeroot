open build/OCaml
DefineCommandVars()

.PHONY: lib clean rwo_app

################################################################################
# General Project Information
PROJECT = rwo

if $(test -e .git)
  GIT_COMMIT = 'Some "$(shell git rev-parse HEAD)"'
  export
else
  GIT_COMMIT = 'None'
  export

LIB_NAME = $(PROJECT)
LIB_MODULES[] =
  $(removesuffix $(basename $(ls lib/*.ml)))
  $(removesuffix $(removesuffix $(basename $(ls lib/*.ml.m4))))
LIB_PACKAGES = core async sexplib.syntax \
               netstring cow cow.syntax

APP_PACKAGES = $(LIB_PACKAGES)

HTML_CHAPTER_FILES[] = $(basename $(ls book/[0-9][0-9]*.html))
HTML_FILES[] =
  $(HTML_CHAPTER_FILES)
  index.html
  faqs.html
  install.html

################################################################################
# Build Parameters
USE_OCAMLFIND = true
if $(not $(OCAMLFIND_EXISTS))
   eprintln(Required package ocamlfind not found.)
   exit 1

NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = $(OCAMLC_EXISTS)

OCAMLFLAGS = -bin-annot -annot -w A-4-33-40-41-42-44-45-48 -thread -safe-string -short-paths
OCAMLCFLAGS =
OCAMLOPTFLAGS =
OCAML_LINK_FLAGS = -linkpkg
OCAML_BYTE_LINK_FLAGS =
OCAML_NATIVE_LINK_FLAGS =
OCAMLFINDFLAGS = -syntax camlp4o

if $(defined PYGMENTIZE)
  PYGMENTIZE="-pygmentize"
  export
else
  PYGMENTIZE=""
  export

################################################################################
# Sub-directories
.SUBDIRS: .
  mkdir -p _build/lib
  mkdir -p _build/app
  mkdir -p _build/site
  vmount(-l, lib/, _build/lib/)
  vmount(-l, app/, _build/app/)

  ##############################################################################
  # Library
  .SUBDIRS: _build/lib
    OCAMLPACKS[] = $(LIB_PACKAGES)

    %.ml: %.ml.m4 :value: $(GIT_COMMIT)
      m4 -D GIT_COMMIT=$(GIT_COMMIT) $< > $@

    lib: $(OCamlLibrary $(LIB_NAME), $(LIB_MODULES))

    .DEFAULT: lib


  ##############################################################################
  # Command Line App
  .SUBDIRS: _build/app
    OCAML_LIBS = ../lib/$(LIB_NAME)
    OCAMLINCLUDES += $(dir ../lib/)
    OCAMLPACKS[] = $(APP_PACKAGES)

    run_core_toplevel: run_core_toplevel.ml ../lib/rwo.cma
      ocamlfind ocamlc \
        -linkpkg -thread -syntax camlp4o \
        -package $(concat \,, $(APP_PACKAGES) compiler-libs.toplevel) \
        -I . -I ../lib $(LIB_NAME).cma \
        run_core_toplevel.ml -o $@

    rwo_runtop: rwo_runtop.ml ../lib/rwo.cma
      ocamlfind ocamlc \
        -g -safe-string -linkpkg -thread -syntax camlp4o \
        -package $(concat \,, $(APP_PACKAGES) compiler-libs.toplevel) \
        -I . -I ../lib $(LIB_NAME).cma \
        rwo_runtop.ml -o $@

    rwo_app: $(OCamlProgram rwo_app, rwo_app)

    .DEFAULT: rwo_app run_core_toplevel rwo_runtop


  ##############################################################################
  # HTML Book
  .SUBDIRS: _build/site

    foreach(file => ..., $(HTML_CHAPTER_FILES))
      $(file): $(ROOT)/book/$(file) ../app/rwo_app
        $(ROOT)/_build/app/rwo_app build chapter $(PYGMENTIZE) -o ./ -repo-root $(ROOT) $<


    index.html: ../app/rwo_app
      $(ROOT)/_build/app/rwo_app build frontpage -o ./ -repo-root $(ROOT)

    faqs.html: $(ROOT)/book/faqs.html ../app/rwo_app
      $(ROOT)/_build/app/rwo_app build faqs -o ./ -repo-root $(ROOT)

    install.html: $(ROOT)/book/install.html ../app/rwo_app
      $(ROOT)/_build/app/rwo_app build install -o ./ -repo-root $(ROOT)

    .DEFAULT: $(HTML_FILES)
      rsync -av $(ROOT)/book/images $(ROOT)/book/css $(ROOT)/book/js ./


################################################################################
# Clean Up
clean:
  rm -rf _build
  rm -rf OMakefile.omc OMakeroot.omc .omakedb .omakedb.lock
