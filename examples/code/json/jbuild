;; autogenerated with rwo-jbuild

(jbuild_version 1)


(alias ((name code) (deps (install.topscript.stamp))))
(alias ((name sexp) (deps (install.topscript.sexp))))

(rule
 ((targets (install.topscript.sexp))
  (deps    (install.topscript))
  (action  (with-stdout-to ${@}
    (run ocaml-topexpect -dry-run -sexp -short-paths -verbose ${<})))))

(rule
 ((targets (install.topscript.stamp))
  (deps    (install.topscript))
  (action  (progn
    (setenv OCAMLRUNPARAM "" (run ocaml-topexpect -short-paths -verbose ${<}))
    (write-file ${@} "")
    (promote-if (install.topscript.corrected as install.topscript))
  ))))

(alias ((name code) (deps (parse_book.topscript.stamp))))
(alias ((name sexp) (deps (parse_book.topscript.sexp))))

(rule
 ((targets (parse_book.topscript.sexp))
  (deps    (parse_book.topscript))
  (action  (with-stdout-to ${@}
    (run ocaml-topexpect -dry-run -sexp -short-paths -verbose ${<})))))

(rule
 ((targets (parse_book.topscript.stamp))
  (deps    (parse_book.topscript))
  (action  (progn
    (setenv OCAMLRUNPARAM "" (run ocaml-topexpect -short-paths -verbose ${<}))
    (write-file ${@} "")
    (promote-if (parse_book.topscript.corrected as parse_book.topscript))
  ))))

(alias ((name code) (deps (build_json.topscript.stamp))))
(alias ((name sexp) (deps (build_json.topscript.sexp))))

(rule
 ((targets (build_json.topscript.sexp))
  (deps    (build_json.topscript))
  (action  (with-stdout-to ${@}
    (run ocaml-topexpect -dry-run -sexp -short-paths -verbose ${<})))))

(rule
 ((targets (build_json.topscript.stamp))
  (deps    (build_json.topscript))
  (action  (progn
    (setenv OCAMLRUNPARAM "" (run ocaml-topexpect -short-paths -verbose ${<}))
    (write-file ${@} "")
    (promote-if (build_json.topscript.corrected as build_json.topscript))
  ))))
